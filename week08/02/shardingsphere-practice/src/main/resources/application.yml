spring:
  shardingsphere:
    datasource: # 数据源配置，可配置多个 <data-source-name>
      names: ds0,ds1 #数据源名称，多数据源以逗号分隔
      ds0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&rewriteBatchedStatements=true
        username: root
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
      ds1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&rewriteBatchedStatements=true
        username: root
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
    sharding:
      tables:
        t_order_head: #逻辑表名
#          actualDataNodes: ds$->{0..1}.t_order_head_$->{0..31}
          actualDataNodes: ds0.t_order_head_$->{[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30]},ds1.t_order_head_$->{[1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31]}
          databaseStrategy:
            inline:
              sharding-column: order_id
              algorithm-expression: ds$->{order_id % 2}
          tableStrategy: #表分片策略
            inline: #行表达式分片策略
              sharding-column: order_id #分片的字段
              algorithm-expression: t_order_head_$->{order_id % 32} #分片的算法

    props:
      sql:
        show: true
